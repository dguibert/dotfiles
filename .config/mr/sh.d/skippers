# -*- mode: sh -*-

PROPS=$HOME/.localhost-props

check_repo_name () {
    #[ -n "$MR_NAME" ] || error "\$MR_NAME not set for $MR_REPO"
    [ -n "$MR_NAME" ] || warning "\$MR_NAME not set for $MR_REPO, default value: $(basename $MR_REPO)"
    export MR_NAME=${MR_NAME-$(basename $MR_REPO)}
}

debug_skippers () {
    check_repo_name
    if [ -n "$MR_DEBUG_SKIP" ]; then
        echo "# SKIP $MR_NAME?  $*"
    fi
}

missing_exe () {
    if [ $# != 1 ]; then
	echo >&2 "BUG: missing_exe called with parameters: $*"
	exit 1
    fi
    if command -v "$1" >/dev/null 2>&1; then
        debug_skippers ". Found $1 in \$PATH"
        return 1 # false
    else
        debug_skippers "! Didn't find $1 in \$PATH"
        return 0 # true
    fi
}

missing_exes () {
    for i in "$@"; do
	if missing_exe "$i"; then
	    return 0 # true
	fi
    done
    return 1 # false
}

missing_file () {
    if [ -f "$1" ]; then
        debug_skippers ". Found file $1"
        return 1 # false
    else
        debug_skippers "! Didn't find file $1"
        return 0 # true
    fi
}

missing_dir () {
    if [ -d "$1" ]; then
        debug_skippers ". Found dir $1"
        return 1 # false
    else
        debug_skippers "! Didn't find dir $1"
        return 0 # true
    fi
}

missing_rpm () {
    if rpm -q "$1" >/dev/null; then
        debug_skippers ". Found rpm $1"
        return 1 # false
    else
        debug_skippers "! Didn't find rpm $1"
        return 0 # true
    fi
}

not_host () {
    read_localhost_nickname
    if [ "$localhost_nickname" != "$1" ]; then
        debug_skippers "! On host $localhost_nickname not $1"
        return 0 # true
    else
        debug_skippers ". On host $1"
        return 1 # false
    fi
}

machine_has_property () {
    prop="$1"

    if grep -q "^$prop\$" $PROPS; then
        debug_skippers ". Found $prop in $PROPS"
        return 0 # true
    else
        debug_skippers "! Didn't find $prop in $PROPS"
        return 1 # false
    fi
}

not_personal () {
    ! machine_has_property "personal"
}

not_work () {
    ! machine_has_property "work"
}

insecure_machine () {
    ! machine_has_property "secure"
}

music_machine () {
    machine_has_property "music"
}

default_skipper () {
    # Default policy is not to skip unless we find a reason to.
    if confidential_repo; then
        if insecure_machine; then
            debug_skippers "! Confidential repo on insecure machine"
            return 0 # true
        #elif user_not_adam; then
        #    debug_skippers "! Confidential repo but not Adam"
        #    return 0 # true
        else
            debug_skippers ". Safe to use confidential repo"
        fi
    fi
    #
    # Default policy.
    debug_skippers ". Default policy - don't skip"
    return 1 # false
}
