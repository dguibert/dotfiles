#! /usr/bin/env nix-shell
#! nix-shell -i bash
#! nix-shell -p curl jq nix git nix-prefetch-scripts
##! nix-shell -I nixpkgs=. -I nixpkgs-overlays=overlays
##! nix-shell -I nixpkgs-overlays=overlays --verbose
## vim: ft=sh :
### https://vaibhavsagar.com/blog/2018/05/27/quick-easy-nixpkgs-pinning/

set -x
set -eufo pipefail

FILE=$1
PROJECT=$2
BRANCH=${3:-master}

OWNER=$(jq -r '.[$project].owner' --arg project "$PROJECT" < "$FILE")
REPO=$(jq -r '.[$project].repo' --arg project "$PROJECT" < "$FILE")

if [ "${OWNER}" != "null" ]; then
  REV=$(curl "https://api.github.com/repos/$OWNER/$REPO/branches/$BRANCH" | jq -r '.commit.sha')
  URL="https://github.com/$OWNER/$REPO/archive/$REV.tar.gz"
  SHA256=$(nix-prefetch-url --unpack "$URL")
  TJQ=$(jq '.[$project] = {owner: $owner, repo: $repo, rev: $rev, sha256: $sha256}' \
    --arg project "$PROJECT" \
    --arg owner "$OWNER" \
    --arg repo "$REPO" \
    --arg rev "$REV" \
    --arg sha256 "$SHA256" \
    < "$FILE")
else
  URL=$(jq -r '.[$project].url' --arg project "$PROJECT" < "$FILE")
  REV=$(git ls-remote $URL | grep refs/heads/$BRANCH | awk '{print $1}')
  SHA256=$(nix-prefetch-git "$URL" "$REV" | jq -r '.sha256')
  TJQ=$(jq '.[$project] = {url: $url, rev: $rev, sha256: $sha256}' \
    --arg project "$PROJECT" \
    --arg url "$URL" \
    --arg rev "$REV" \
    --arg sha256 "$SHA256" \
    < "$FILE")
fi

[[ $? == 0 ]] && echo "${TJQ}" >| "$FILE"
